// Generated by view binder compiler. Do not edit!
package com.black.xperiments.dspwithneurosky.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.black.xperiments.dspwithneurosky.R;
import com.jjoe64.graphview.GraphView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMainBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final GraphView bandsView;

  @NonNull
  public final GraphView fftView;

  @NonNull
  public final GraphView filteredView;

  @NonNull
  public final GraphView psdView;

  @NonNull
  public final GraphView rawView;

  private ActivityMainBinding(@NonNull LinearLayout rootView, @NonNull GraphView bandsView,
      @NonNull GraphView fftView, @NonNull GraphView filteredView, @NonNull GraphView psdView,
      @NonNull GraphView rawView) {
    this.rootView = rootView;
    this.bandsView = bandsView;
    this.fftView = fftView;
    this.filteredView = filteredView;
    this.psdView = psdView;
    this.rawView = rawView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bandsView;
      GraphView bandsView = ViewBindings.findChildViewById(rootView, id);
      if (bandsView == null) {
        break missingId;
      }

      id = R.id.fftView;
      GraphView fftView = ViewBindings.findChildViewById(rootView, id);
      if (fftView == null) {
        break missingId;
      }

      id = R.id.filteredView;
      GraphView filteredView = ViewBindings.findChildViewById(rootView, id);
      if (filteredView == null) {
        break missingId;
      }

      id = R.id.psdView;
      GraphView psdView = ViewBindings.findChildViewById(rootView, id);
      if (psdView == null) {
        break missingId;
      }

      id = R.id.rawView;
      GraphView rawView = ViewBindings.findChildViewById(rootView, id);
      if (rawView == null) {
        break missingId;
      }

      return new ActivityMainBinding((LinearLayout) rootView, bandsView, fftView, filteredView,
          psdView, rawView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
